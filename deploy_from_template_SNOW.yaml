---
- name: Create a virtual machine on vSphere
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    vcenter_ip: 
    vcenter_username: 
    vcenter_password: 
    vm_name: win-server-vm-000X
    template: WinServer2016_templ0001
    guest_domain: ansibleworkshop.com
    vm_password:
  
  tasks: 
    # added everything below here for SNOW use case
    - name: include vars
      include_vars: incident_vars.yaml

    - name: SERVICENOW incident created 
      snow_record:
        username: "{{username}}"
        password: "{{password}}"
        instance: "{{instance}}"
        state: present
        table: incident
        data:
          short_description: "A VM deployment has been started and requested"
          severity: 1
          priority: 2
          approval: approved
          caller_id: "System Administrator"
          comments: "A VM deployment has started. This ticket was generated by Ansible Tower API call. \n--------\n VM Data to Follow\n--------\n "
      register: snow_var
      delegate_to: localhost

    - name: Connect to vCenter and Deploy from template
      vmware_guest:
        hostname: "{{ vcenter_ip }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: False
        name: "{{ vm_name }}"
        state: poweredon
        template: "{{ template }}"
        cluster: Cluster01
        datacenter: DC01
        folder: ansiblevms
        customization:
          domain: "{{ guest_domain }}"
          dns_suffix:
            - "{{ guest_domain }}"
          password: "{{ vm_password }}"
        networks:
        - name: VM Network
        wait_for_ip_address: yes
      register: deploy_vm

    - name: look at VM register
      debug:
        var: deploy_vm

    - name: SERVICENOW incident updated and resolved if deploy succeeded
      snow_record:
        username: "{{username}}"
        password: "{{password}}"
        instance: "{{instance}}"
        number: "{{ snow_var.record.number }}"
        state: present
        table: service_request
        data:
          caller_id: "System Administrator"
          comments: "VM provisioning has succeeded on vSphere Cluster 01. This ticket was updated and resolved by Ansible Tower API call in a verification playboook. The VM metadata is this: \n--------\n {{deploy_vm}}\n--------\n "
          incident_state: 6
      register: snow_var
      delegate_to: localhost
      #when: errorCode.changed

    - name: DEBUG SNOW_VAR
      debug:
        var: snow_var.record.state


    - name: SERVICENOW incident closed if  validation succeeded
      snow_record:
        username: "{{username}}"
        password: "{{password}}"
        instance: "{{instance}}"
        number: "{{ snow_var.record.number }}"
        state: present
        table: incident
        data:
          caller_id: "System Administrator"
          comments: "The deployment job has now been validated and completed}. This ticket was closed by Ansible Tower API call in a validation playboook. \n--------\n \n--------\n "
          incident_state: 7
      register: snow_var
      delegate_to: localhost
      #when: errorCode.changed

    - name: DEBUG SNOW_VAR
      debug:
        var: snow_var.record

